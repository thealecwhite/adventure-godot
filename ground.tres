[gd_resource type="VisualShader" load_steps=5 format=2]

[ext_resource path="res://grass.jpg" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 100, 100, 0 ) ]
operator = 2

[resource]
code = "shader_type spatial;
uniform sampler2D tex_frg_2 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorOp:4
	vec3 n_in4p1 = vec3(100.00000, 100.00000, 0.00000);
	vec3 n_out4p0 = n_out3p0 * n_in4p1;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out4p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -514, 87 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 20, 120 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -460, 180 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -220, 220 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 2, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 2, 0, 2, 0, 0, 0, 3, 0, 4, 0, 4, 0, 2, 0 )
